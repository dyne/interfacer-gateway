# SPDX-License-Identifier: AGPL-3.0-or-later
# Copyright (C) 2022-2023 Dyne.org foundation <foundation@dyne.org>.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

---
- name: Create non root user
  hosts: all
  remote_user: root
  tasks:
  - name: Add the user 'proxy'
    ansible.builtin.user:
      name: proxy
      shell: /bin/bash
  - name: Create .ssh directory
    file:
      path: /home/proxy/.ssh
      state: directory
      owner: proxy
      group: proxy
  - name: Set authorized keys for user controller
    copy:
      src: /root/.ssh/authorized_keys
      remote_src: true
      dest: /home/controller/.ssh/authorized_keys
      owner: controller
      group: controller
- name: Install zenflows proxy
  hosts: all
  remote_user: root
  become_user: proxy
  become_method: su
  vars:
    basedir: "/interfacer-proxy"
    ifacer_log: "/var/log/interfacer/"
  tasks:
  - name: Install package dependencies
    ansible.builtin.package:
      name:
       - nginx
       - tmux
       - logrotate
      state: latest
  - name: Build app
    command: make
    args:
      chdir: ..
    delegate_to: localhost

  - name: Create project directory
    ansible.builtin.file:
      path: "/{{ basedir }}"
      state: directory

  - name: copy executable
    copy:
      dest: "{{ basedir }}/interfacer-gateway"
      src: "../interfacer-gateway"
      owner: proxy
      group: proxy

  - name: Make service executable
    file: dest="{{ basedir }}/interfacer-gateway" mode=a+x

  - name: kill old tmux session
    command: tmux kill-session -t zenflows-proxy-{{ port }}
    ignore_errors: yes

  - name: .env
    blockinfile:
      dest: "/{{ basedir }}/.env.{{ port }}"
      create: true
      block: |
        export ZENFLOWS={{ zenflows }}
        export HERE_API={{ here_api }}
        export PORT={{ port }}
        export INBOX={{ inbox }}
        export IFACER_LOG={{ ifacer_log }}

  - name: Logrotate config
    blockinfile:
      dest: "/{{ basedir }}/.env.{{ port }}"
      create: true
      block: |
        {{ ifacer_log }}* {
          size 100M
          rotate 3
          compress
        }


  - name: run proxy
    # become: true
    command: tmux new-session -d -s zenflows-proxy-{{ port }} "source {{ basedir }}/.env.{{ port }} && {{ basedir }}/interfacer-gateway"

  - name: Nginx service
    blockinfile:
      dest: "/etc/nginx/conf.d/{{ domain_name }}.conf"
      create: true
      block: |
        # server {
        # listen 80 default_server;
        #
        # server_name {{ domain_name }};
        #
        # return 301 https://$host$request_uri;
        # }
        server {
          listen 443 ssl;
          root /var/www/html;
          server_name {{ domain_name }};
          ssl_certificate /etc/letsencrypt/live/{{ domain_name}}/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/{{ domain_name}}/privkey.pem;
          include /etc/letsencrypt/options-ssl-nginx.conf; # Redirect non-https traffic to https
          if ($scheme != "https") {
              return 301 https://$host$request_uri;
          }
          location / {
            proxy_pass http://127.0.0.1:{{ port }}/;
          }
        }

  - name: Remove default config for nginx
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: Restart nginx
    ansible.builtin.service:
      state: reloaded
      name: nginx

